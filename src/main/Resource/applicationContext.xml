<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <!--====================================================以下是XML和注解方式混合使用========================================================================-->
    <!--    <context:component-scan base-package="pers.huidong.spring.demo8"/>-->
    <!-- 下面的表示只能用属性注入的注解   -->
    <context:annotation-config/>
    <bean id="categoryDao" class="pers.huidong.spring.demo8.CategoryDao"></bean>
    <bean id="productDao" class="pers.huidong.spring.demo8.ProductDao"></bean>
    <bean id="productService" class="pers.huidong.spring.demo8.ProductService"></bean>
    <!--====================================================以下是注解方式========================================================================-->
    <!--    开启注解扫描-->
    <!--    <context:component-scan base-package="pers.huidong.spring.demo6"/>-->
    <!--    <context:component-scan base-package="pers.huidong.spring.demo7"/>-->
    <!--====================================================以下是配置XML方式=====================================================================-->
    <!--UserService的创建权交给了Spring-->
    <!--    <bean id="userService" class="pers.huidong.spring.demo1.UserServiceImpl">-->
    <!--        <property name="name" value="huidong"></property>-->
    <!--    </bean>-->

    <!--==================Bean实例化的三种方式：一般使用无参构造方式！========================-->

    <!--第一种：无参构造器的方式-->
    <!--    <bean id="bean1" class="pers.huidong.spring.demo2.Bean1"></bean>-->
    <!--第二种：静态工厂的方式-->
    <!--    <bean id="bean2" class="pers.huidong.spring.demo2.Bean2Factory" factory-method="createBean2"></bean>-->
    <!--第三种：实例工厂的方式-->
    <!--    <bean id="bean3Factor" class="pers.huidong.spring.demo2.Bean3Factory"></bean>-->
    <!--    <bean id="bean3" factory-bean="bean3Factor" factory-method="createBean3"></bean>-->

    <!--==================Bean的作用范围=================================================-->
    <!--第一种：默认单例的，多例则可设置scope="prototype"-->
    <!--    <bean id="person" class="pers.huidong.spring.demo3.Person" scope="prototype"></bean>-->

    <!--==================Bean的生命周期=================================================-->
    <!--简单的三种生命周期状态，实例化，初始化，销毁-->
    <!--    <bean id="man" class="pers.huidong.spring.demo3.Man" init-method="setUp" destroy-method="tearDown">-->
    <!--        <property name="name" value="huidong"></property>-->
    <!--    </bean>-->
    <!--生命周期的11种状态完整过程：加上上面的三种状态配置一起执行-->
    <!--    <bean class="pers.huidong.spring.demo3.MyBeanPostProcessor"></bean>-->
    <!--    <bean id="userDao" class="pers.huidong.spring.demo3.UserDaoImpl"></bean>-->
    <!--=======================属性注入方式===============================================-->
    <!--    构造方法的属性注入-->
    <!--    <bean id="user" class="pers.huidong.spring.demo4.User">-->
    <!--        <constructor-arg name="name" value="huidogn"></constructor-arg>-->
    <!--        <constructor-arg name="age" value="21"></constructor-arg>-->
    <!--    </bean>-->
    <!--    set方法的属性注入-->
    <!--    <bean id="person" class="pers.huidong.spring.demo4.Person">-->
    <!--        <property name="name" value="huiodng"/>-->
    <!--        <property name="age" value="21"/>-->
    <!--        <property name="cat" ref="cat"/>-->
    <!--    </bean>-->
    <!--    <bean id="cat" class="pers.huidong.spring.demo4.Cat">-->
    <!--        <property name="name" value="ketty"/>-->
    <!--    </bean>-->
    <!--    Bean的p名称空间方法的属性注入-->
    <!--    <bean id="person" class="pers.huidong.spring.demo4.Person" p:name="huidong" p:age="21" p:cat-ref="cat"/>-->
    <!--    <bean id="cat" class="pers.huidong.spring.demo4.Cat" p:name="ketty"/>-->
    <!--    Bean的Spel的属性注入-->
    <!--    <bean id="product" class="pers.huidong.spring.demo4.Product">-->
    <!--        <property name="name" value="#{'男装'}"/>-->
    <!--        <property name="price" value="#{productInfo.calculatePrice()}"/>-->
    <!--        <property name="category" value="#{category}"/>-->
    <!--    </bean>-->
    <!--    <bean id="category" class="pers.huidong.spring.demo4.Category">-->
    <!--        <property name="name" value="#{'服装'}"/>-->
    <!--    </bean>-->
    <!--    <bean id="productInfo" class="pers.huidong.spring.demo4.ProductInfo"></bean>-->
    <!--复杂类型属性注入-->
    <!--    <bean id="collectionBean" class="pers.huidong.spring.demo5.CollectionBean">-->
    <!--        <property name="arrs">-->
    <!--            &lt;!&ndash;   数组类型&ndash;&gt;-->
    <!--            <list>-->
    <!--                <value>aaa</value>-->
    <!--                <value>bbb</value>-->
    <!--                <value>ccc</value>-->
    <!--            </list>-->
    <!--        </property>-->
    <!--        &lt;!&ndash;   list集合类型&ndash;&gt;-->
    <!--        <property name="list">-->
    <!--            <list>-->
    <!--                <value>111</value>-->
    <!--                <value>222</value>-->
    <!--                <value>333</value>-->
    <!--            </list>-->
    <!--        </property>-->
    <!--        &lt;!&ndash;   set集合类型&ndash;&gt;-->
    <!--        <property name="set">-->
    <!--            <set>-->
    <!--                <value>111</value>-->
    <!--                <value>222</value>-->
    <!--                <value>333</value>-->
    <!--            </set>-->
    <!--        </property>-->
    <!--        &lt;!&ndash;   Map类型&ndash;&gt;-->
    <!--        <property name="map">-->
    <!--            <map>-->
    <!--                <entry key="aaa" value="111"></entry>-->
    <!--                <entry key="bbb" value="222"></entry>-->
    <!--                <entry key="ccc" value="333"></entry>-->
    <!--            </map>-->
    <!--        </property>-->
    <!--        &lt;!&ndash;   properties集合类型&ndash;&gt;-->
    <!--        <property name="properties">-->
    <!--            <props>-->
    <!--                <prop key="username">huidong</prop>-->
    <!--                <prop key="password">123</prop>-->
    <!--            </props>-->
    <!--        </property>-->
    <!--    </bean>-->
</beans>